-- Project: User Activity Analysis  
-- Goal: Analyze user engagement (sends, opens, visits) by country and interval  
-- Data source: data-analytics-mate.DA  
-- Author: Hanna Kontar  
-- Tool: BigQuery  

WITH metrics AS ( 
    SELECT
        date,
        sp.country,
        send_interval,
        is_verified,
        is_unsubscribed,
        COUNT(DISTINCT a.id) AS account_cnt,
        0 AS sent_cnt,
        0 AS open_msg,
        0 AS visit_msg
    FROM data-analytics-mate.DA.account a
    JOIN data-analytics-mate.DA.account_session acs  
        ON a.id = acs.account_id
    JOIN data-analytics-mate.DA.session_params sp
        ON acs.ga_session_id = sp.ga_session_id
    JOIN data-analytics-mate.DA.session s  
        ON acs.ga_session_id = s.ga_session_id
    GROUP BY 1,2,3,4,5

    UNION ALL

    SELECT
        DATE_ADD(s.date, INTERVAL sent_date DAY) AS date,
        sp.country,
        a.send_interval,
        a.is_verified,
        a.is_unsubscribed,
        0 AS account_cnt,
        COUNT(DISTINCT es.id_message) AS sent_cnt,
        COUNT(DISTINCT eo.id_message) AS open_msg,
        COUNT(DISTINCT ev.id_message) AS visit_msg
    FROM data-analytics-mate.DA.account a
    LEFT JOIN data-analytics-mate.DA.account_session acs
        ON a.id = acs.account_id
    JOIN data-analytics-mate.DA.session s
        ON acs.ga_session_id = s.ga_session_id
    JOIN data-analytics-mate.DA.session_params sp  
        ON s.ga_session_id = sp.ga_session_id
    JOIN data-analytics-mate.DA.email_sent es  
        ON a.id = es.id_account
    LEFT JOIN data-analytics-mate.DA.email_open eo
        ON es.id_message = eo.id_message
    LEFT JOIN data-analytics-mate.DA.email_visit ev
        ON eo.id_message = ev.id_message
    GROUP BY 1,2,3,4,5
),

sumurize AS (  
    SELECT
        date,
        country,
        send_interval,
        is_verified,
        is_unsubscribed,
        SUM(account_cnt) AS account_cnt,    
        SUM(sent_cnt) AS sent_cnt,    
        SUM(open_msg) AS open_msg,      
        SUM(visit_msg) AS visit_msg
    FROM metrics
    GROUP BY 1,2,3,4,5
),

total AS (
    SELECT
        date,
        country,
        send_interval,
        is_verified,
        is_unsubscribed,
        account_cnt,    
        sent_cnt,      
        open_msg,      
        visit_msg,
        SUM(sent_cnt) OVER (PARTITION BY country) AS total_country_sent_cnt,  
        SUM(account_cnt) OVER (PARTITION BY country) AS total_country_account_cnt    
    FROM sumurize
    GROUP BY 1,2,3,4,5,6,7,8,9
),

ranking AS (
    SELECT
        date,
        country,
        send_interval,
        is_verified,
        is_unsubscribed,
        account_cnt,    
        sent_cnt,      
        open_msg,      
        visit_msg,
        total_country_sent_cnt,
        total_country_account_cnt,  
        DENSE_RANK() OVER (ORDER BY total_country_sent_cnt DESC) AS rank_total_country_sent_cnt,
        DENSE_RANK() OVER (ORDER BY total_country_account_cnt DESC) AS rank_total_country_account_cnt
    FROM total
)

SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    account_cnt,
    sent_cnt,
    open_msg,
    visit_msg,
    total_country_sent_cnt,
    rank_total_country_sent_cnt,
    total_country_account_cnt,
    rank_total_country_account_cnt
FROM ranking
WHERE rank_total_country_account_cnt <= 10 
   OR rank_total_country_sent_cnt <= 10;

